Revision history for the Perl library Validation::Class

7.900013  2013-01-01

  - Added untested but fully-functional form-fields plugin

  - Miscellaneous POD changes, especially around the set/load keywords

  - Pruned some POD and updated the class method to only work with validation classes

  - Modified the Options directive to support keyed-options

  - Added new help directive to associate help statements with fields

7.900012  2012-12-31

  - Fixed major logic flaw in dependency verification logic

  - Fixed major logic flaw in alias checking during normalization

  - Addressed test failure under Perl 5.8.1

7.900011  2012-12-23

  - Fixed major logic flaw in newer directives dealing with null parameters

7.900010  2012-12-20

  - Fix 03-streaming.t for Perl v5.8.9 *

  - V::C::Fields now uses AUTOLOAD to access fields without using get()

7.900009  2012-12-16

  - Fixed setting param as undefined via the acccessor

  - Method input/output specification accepts other method names also

  - Method `using` specification will fallback to _method_name if missing

7.900006  2012-12-16

  - Fixed missing version numbers

  - Updated main module POD (more directional)

  - Incoming parameters (via params argument) are always cloned

  - Added prototype utility functions for un/flattening parameters

  - Removed unnecessary flattening function from V::C::Fields

  - Fixed 03-streaming test (me thinks)

7.900005  2012-12-10

  - Fixed quirk with keys/values functions in V::C::Mapping breaking tests

7.900004  2012-12-09

  - Minor maintenance and POD updates

7.900003  2012-12-05

  - Introduced Validation::Class::Simple::Streamer

7.900000  2012-11-18

  - Added more documentation

  - Added the ability to override messages at the field and class-level

  - Created Validation::Class::Directive::Messages

  - Created Validation::Class::Directive::City

  - Created Validation::Class::Directive::State

  - Created Validation::Class::Directive::Zipcode

  - Created Validation::Class::Directive::Creditcard

  - Created Validation::Class::Directive::Date

  - Created Validation::Class::Directive::Time

  - Created Validation::Class::Directive::Decimal

  - Created Validation::Class::Directive::Email

  - Created Validation::Class::Directive::Hostname

  - Created Validation::Class::Directive::SSN

  - Created Validation::Class::Directive::Telephone

  - Created Validation::Class::Directive::UUID

  - Created Validation::Class::Whitepaper

  - Changed the version number scheme (again) to slow down incrementing of the major number

  - Created Validation::Class::Simple for ad-hoc validation needs

  - Created various container classes, .e.g. Fields, Params, Directives, etc

  - Created various base classes, .e.g. Core, Mapping, Listing, etc

  - Rewrite of all documentation iteratively, under the Validation::Class::Manual namespace

  - Rewrite of Validation::Class, main module provides sugar for configuration only

  - Rewrite of Validation::Class::Prototype, now is configurable using OO

  - Added the Multiples directive which better enforces array handling

  - Renamed the clone method to clone_field

  - Removed inheritence support via 'base' as it existed in 7.85

  - Removed the object keyword and support as it existed in 7.85

7.85  2012-09-21

  - The load/set and object/obj keywords documentation has been moved into the intro document under hidden features

  - Fixed Class::Forward version dependency which cause test failures in previous versions

7.84  2012-09-20

  - The import method has been modified to copy/merge meta-class configs based on inheritance

7.82  2012-08-13

  - The class method/functionality has been refactored and is now using Class::Forward

  - New invalid parameter error triggered when arrayrefs are discovered with nested structures (non-scalars)

7.81  2012-08-11

  - fixed array/filtering issue (rare bug)

7.80  2012-07-31

  - fixed typo in custom validation

7.79  2012-07-28

  - updated the object keyword and functionality (untested)

7.78  2012-07-28

  - changed flatten/unflatten functionality, now only happens during validation

  - fixed unneccessary serialization, field and values are always as expected

  - better parameter handling (backwards-compatibility: some earlier functionality issues may occur)

7.77  2012-07-27

  - better handling of custom validation (and registering resulting errors)

7.75  2012-07-15

  - added the validate_profile method (untested atm)

7.74  2012-07-03

  - allow class to cooperate with non-validation classes

7.72  2012-07-02

  - main module POD changes

  - renamed constructor replacement to initialize_validator

  - restrict the class method from passing parameters that don't exist

7.70  2012-06-28

  - on initialization, only set registered accessors

  - major bug fix   validation routine now reaps auto-cloned fields

  - custom validation firing default failure message even if custom message is used

7.69  2012-06-24

  - added more tests

7.68  2012-06-20

  - updated some tests

  - fixed plugin function and POD -  works better (with discovery)

7.67  2012-06-20

  - misc POD changes

7.66  2012-06-19

  - misc changes (experimental configs) -  should not impede normal usage

7.65  2012-06-17

  - allow keywords to be called/used in OO fashion

  - fixed V::C::Exporter which broke due to recent updates (needs tests)

7.59  2012-06-16

  - builders are also passed all arguments given to the constructor

  - fixed breakage in V::C::Exporter

7.58  2012-06-16

  - changed structure for defining and using plugins

  - allow the retrieval of instantiated plugin objects

7.55  2012-06-14

  - fixed major bug cause by 7.50 (alternate syntax for the set/load keyword)

7.50  2012-06-13

  - wrote tests to test the Validation::Class::Field object accessors

  - changed module::find usage   no longer loads unless used

  - added get method to Validation::Class::Collection

  - various POD changes

  - refactored class method in V::C::P now accepts an alternate syntax

  - V::C::P class method load unloaded modules as they're called

  - add alternate syntax to the V::C load/set method

7.40  2012-06-06

  - fixed bug in validation toggling feature   github-issue-16

7.39  2012-06-03

  - fixed major bug in custom validation evaluation

7.38  2012-05-31

  - more POD changes

7.35  2012-05-25

  - POD changes

7.25  2012-05-18

  - misc changes

  - changed error message for options validator

  - fixed major overlooked bug in the processing of core validators

7.21  2012-05-12

  - fixed bad conditional in t/09-modifiers.t and t/02-keyword-object.t

7.20  2012-05-10

  - fixed mistype in t/09-modifiers.t causing test failures

  - add the obj/object keyword (which defines class object builders)

  - add test for the object keyword

7.16  2012-05-03

  - added V::C::Relatives collection class

  - fixed slight oversight in V::C

  - added test for method modifiers

  - extended V::C::Intro POD

7.15  2012-05-03

  - added all *_errors, *_fields, and *_params methods to

  - the proxy methods list

  - update various POD bits

7.12  2012-05-02

  - better synopsis

  - update various POD bits

7.11  2012-04-27

  - enforcing field naming convention to reduce margin for error

  - refactored and decoupled main validation routine

  - added has() method to V::C::Collection

  - various POD updates

  - major engine refactoring

  - renamed set_field_value to set_fields

  - renamed default_field_value to get_value

  - changed set_params

  - remembered (+documented) why we dont reap cloned fields

7.04  2012-04-24

  - using the 5.14 open pragma for one test cause failures on cpants

7.03  2012-04-24

  - fixed minor object-based parameter handling issue

  - get_hash_params method renamed unflatten_params

  - set_hash_params method renamed flatten_params

  - changed how field accessors are created and called

7.02  2012-04-23

  - moved archived tests undef regression folder

  - tested accessors and parameter handling of structures (ARRAYS)

7.01  2012-04-23

  - release new public version

  - complete rewrite

  - major implementation overhaul

  - prevent namespace pollution by employing a prototype class

  - added proto/prototype method to access prototype class

  - removed load_classes and load_plugins

  - changed options accepted by the load/set method

  - no longer registering quickname for relatives

  - deprecated load_plugins and load_classes methods

  - removed Array::Unique finally

  - cleanup error handling (needs its own class)

  - merge half-ass cookbook into intro POD

  - started rewriting existing tests (and new ones)
